a <- available.packages()
a <- available.packages()
q()
install.packages("devtools")
find_rtools()
find_rtools()
find_package("devtools")
x
x = 1
x
x = a
x
x = 'a'
x
x = "a"
x
a
print(x)
x = 'hello'
x
x = 5
x
x *= x
x = x*x
x
x = 1:20
x
x = 0/0
x
x = inf
x = Inf
x
x = 1/x
x
x = 5.0
x
x = 5.5:L
x = 5.5L
x
attributes(x)
x = vector()
x
x = true
x
x = True
x = FALSE
x
x = TRUE
x
x<-TRUE
x
x = TRUE
x
x=FALSE
x
x=T
x
x=c(1.7, "c")
x
x=(T,2)
x=(TRUE,2)
x=c(TRUE,2)
x
x = c("a", TRUE)
x
class(x)
as.numeric(x)
x
x = 0:6
x
class(x)
as.numeric(x)
class(x)
as.logical(x)
class(x)
x
x = matrix(nrow=2,ncol=3)
x
dim(x)
attributes(x)
x = matrix(1:8, nrow=2, ncol=3)
x
x = 1:3
y = 10:12
cbind(x,y)
z = cbind(x,y)
z
y = 10:13
z
z = cbind(x,y)
z
x = c("yes", "yes", "no", "yes", "no")
x
x = factor(x)
x
table(x)
unclass(x)
x
is.na(x)
is.nan(x)
rm(x)
rm(y)
x = c("a", "b", "c", "d", "e")
x[1]
x[x>"c"]
u = x > "d"
u
x = list(foo = 1:4, bar = 0.6)
x
x = list(foo = 1:4, bar = 0.6, test = c("a", "b"))
x
x[3]
x[[3]]
y = 5
class(y)
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
x <- 1:4
y <- 2
x + y
class(x+y)
read.csv(hw1_data.csv)
read.csv("hw1_data.csv")
data = read.csv("hw1_data.csv")
data[1]
data[[1]]
data[header]
header[data]
str(data)
data[1:2,]
data[153,]
data[154,]
data[152:153,]
data[47,Ozone]
data[47,"Ozone"]
data[47,]
data[,"Ozone"]
is.na(data[,"Ozone"])
is.na(data[,"Ozone"]) == F
table(is.na(data[,"Ozone"])
)
mean(data[,"Ozone"])
mean(data[,"Ozone"], na.rm = T)
data[,"Ozone"] > 31
x = data[,"Ozone"] > 31
data[x]
data[x, ]
data[x, "Ozone"]
data
data[,"Ozone" == 41]
data[,"Ozone"]
data$Ozone
data$Ozone =>41
data[data$Ozone == 41]
data[,Ozone[]]
subset(data, Ozone = 41)
subset(data, Ozone == 41)
subset(data, Ozone > 31 && Temp > 90)
subset(data, Temp > 90)
subset(data, Ozone > 31 & Temp > 90)
x = subset(data, Ozone > 31 & Temp > 90)
x
mean(x[,Solar.R])
mean(x[,"Solar.R])
""
)
]
"])
mean(x[,"Solar.R"])
x = subset(data, Month == 6)
x
mean(x[,"Temp"])
x = subset(data, Month == 5)
x
max(x[,"Ozone"])
x[,"Ozone"]
x[,"Ozone",na.rm=T]
max(x[,"Ozone"], na.rm = T)
above <- function(x, y = 10) {
use <- x > y
x[use]
}
above(1:50)
add <- function(test1, app) {
test1 + app
}
add(app=1, tes=2)
add(app=1, 2)
add <- function(test1, app) {
print(test1)
print(app)
}
add(app=1, 2)
add(app=1, tes=2)
cube <- function(x, n) { x^3 }
cube(3)
x <- 1:10
if(x > 5) {
x <- 0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
system.time()
system.time(letters)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
rep(0:1, each = 5)
library(swirl)
swirl()
head(flags)
dim(flags)
play()
str(flags)
names(flags)
flags$name
flags["name",]
flags[."name"]
flags[,"name"]
nxt()
class(flagts)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cbind(flags$name, as.character(cls_list))
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,
unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
Use table(flags$animate)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 19)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace=TRUE, prob = c(0.3, 0.7) )
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(5, 10)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass()
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(y=cars$speed, x=cars$dist)
plot(x=cars$speed, y=cars$dist, xlab = "Speed")
plot(x=cars$speed, y=cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab = "Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars, slim=c(10,15))
plot(cars, xlim = c(10, 15))
plot(cars, pch=2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
exit
quit()
source('~/datasciencecoursera/R programming/cachematrix.R')
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
> cacheSolve(m)
cacheSolve(m)
cacheSolve(m)
source('~/datasciencecoursera/R programming/cachematrix.R')
library(xlsx)
library(rJava)
library(rJava)
library(rJava)
Sys.getenv("JAVA_HOME")
install.packages("xlsxjars")
library(xlsx)
library(rJava)
setwd("~/datasciencecoursera/Reproducible Research/RepData_PeerAssessment2")
result <- rpubsUpload("My document title", "RepData_PeerAssessment2.htm")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("ggplot2")
install.packages("tidyr")
install.packages("R.utils")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
